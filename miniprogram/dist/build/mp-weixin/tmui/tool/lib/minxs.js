"use strict";var e=Object.defineProperty,r=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,l=(r,t,o)=>t in r?e(r,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):r[t]=o,i=(e,i)=>{for(var n in i||(i={}))t.call(i,n)&&l(e,n,i[n]);if(r)for(var n of r(i))o.call(i,n)&&l(e,n,i[n]);return e},n=require("../theme/theme.js"),a=require("./interface.js");const s={_style:{type:[Array,String,Object],default:()=>{}},_class:{type:[Array,String],default:""},color:{type:String,default:"primary"},followTheme:{type:[Boolean,String],default:!0},dark:{type:[Boolean,String],default:!1},followDark:{type:[Boolean,String],default:!0},round:{type:[Number,String],default:0},shadow:{type:[Number,String],default:0},outlined:{type:[Boolean,String],default:!1},border:{type:[Number],default:0},borderStyle:{type:[String],default:a.borderStyle.solid,validator:e=>{let r=[a.borderStyle.dashed,a.borderStyle.solid,a.borderStyle.dotted];return r.includes(e)||console.error("边线类型只能为borderStyle中的一种。"),r.includes(e)}},borderDirection:{type:[String],default:a.cssDirection.all,validator:e=>{let r=[a.cssDirection.left,a.cssDirection.right,a.cssDirection.bottom,a.cssDirection.top,a.cssDirection.topbottom,a.cssDirection.leftright,a.cssDirection.topleft,a.cssDirection.topright,a.cssDirection.bottomleft,a.cssDirection.bottomright,a.cssDirection.all];return r.includes(e)||console.error("边线方向格式只能为cssDirection中的一种。"),r.includes(e)}},text:{type:[Boolean,String],default:!1},transprent:{type:[Boolean,String],default:!0},linear:{type:[String],default:a.linearDirection.none,validator:e=>{let r=["left","right","bottom","top",""];return r.includes(e)||console.error("渐变方向只能为,left:右->左，right:左->右。top:下->上，bottom:上->下,中的一种。"),r.includes(e)}},linearDeep:{type:[String],default:a.linearDeep.light,validator:e=>{let r=[a.linearDeep.light,a.linearDeep.dark,a.linearDeep.accent];return r.includes(e)||console.error("渐变方向只能为light,dark,accent中的一种。"),r.includes(e)}},isDisabledRoundAndriod:{type:[Boolean,String],default:!1},blur:{type:Boolean,default:!1}};exports.computedClass=e=>{const r=e._class;return"string"==typeof r?r:Array.isArray(r)?r.join(" "):""},exports.computedDark=(e,r)=>{const t=e.followDark,o=e.dark,l=r.dark;return t?l:o},exports.computedStyle=e=>{const r=e._style;if("string"==typeof r){let e=r.split(";").map((e=>{let r={},t=(e=e.replace(";","")).split(":");return r[t[0]]=t[1],r})),t={};return e.forEach((e=>{t=i(i({},t),e)})),t}if("object"==typeof r&&!Array.isArray(r))return r;if("object"==typeof r&&Array.isArray(r)){let e={};return r.forEach((r=>{e=i(i({},e),r)})),e}return{}},exports.computedTheme=(e,r)=>{const t=e.color,o=e.border,l=e.shadow,i=e.round,a=e.outlined,s=e.text,c=e.borderStyle,d=e.borderDirection,p=e.linear,u=e.linearDeep,y=e.blur;n.theme.isCssColor(t)&&console.error("不支持自定义组件上的颜色值，请在theme/theme.js中添加自定义的颜色值为主题。当前已切换为primary主题。");let f=t||"primary";return(new n.theme.themeColors).getTheme({colorname:f,dark:r,borderWidth:o,shadow:parseInt(String(l)),round:parseInt(String(i)),outlined:!!a,text:!!s,borderStyle:c,borderDirection:d,linearDirection:p,linearDeep:u,blur:y})},exports.custom_props=s;
